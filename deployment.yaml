apiVersion: v1
kind: Pod
metadata:
  name: redis-pod
  labels:
      app: redis-pod
spec:
  containers:
  - name: redis
    image: redis
    env:
    - name: MASTER
      value: "true"
    ports:
    - containerPort: 6379
    resources:
      limits:
        cpu: "0.1"
        memory: "128Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: redis-svc
spec:
  selector:
    app: redis-pod
  ports:
  - port: 6379
    nodePort: 30500
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: signalrserver-dpl
spec:
  replicas: 3
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: signalrserver
  template:
    metadata:
       labels:
         app: signalrserver
    spec:
      containers:
      - name: signalrserver
        image: "ricardosantos9521/teamrics:signalrserver_BUILDNUMBER"
        ports:
        - containerPort: 80
        env:
        - name: "ASPNETCORE_ENVIRONMENT"
          value: "Kubernetes"
        - name: "REDIS_CONFIG"
          value: "192.168.1.150:30500"
        resources:
          limits:
            memory: "128Mi"
            cpu: "250m"
      imagePullSecrets:
      - name: secretteamrics
---
apiVersion: v1
kind: Service
metadata:
  name: signalrserver-svc
spec:
  selector:
    app: signalrserver
  ports:
  - port: 80
    nodePort: 30200
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: signalrserver-ing
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ingress.allow-http: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route_socket"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
spec:
  rules:
  - http:
      paths:
      - path: /signalrserver
        backend:
          serviceName: signalrserver-svc
          servicePort: 80